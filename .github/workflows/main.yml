# Upon a push to master, this workflow will:
# -- run the linter
# -- run all tests
# -- rebuild documentation
# If all pass, it will publish it to PyPI

name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  lint:
    name: "Run linters"
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.9 ]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8, pylint
          python -m pip install -r requirements.txt

      - name: Install mer
        run: |
          python -m pip install .

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Lint with pylint
        run: |
          pylint .

  test-ubuntu:
    name: "Test python ${{matrix.python-version}} on latest Ubuntu"
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest
          python -m pip install -r requirements.txt

      - name: Install mer
        run: |
          python -m pip install .

      - name: Test with pytest
        run: |
          pytest

  test-macos:
    name: "Test python ${{matrix.python-version}} on latest MacOS"
    runs-on: macos-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest
          python -m pip install -r requirements.txt

      - name: Install mer
        run: |
          python -m pip install .

      - name: Test with pytest
        run: |
          pytest

  test-windows:
    name: "Test python ${{matrix.python-version}} on latest Windows"
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest
          python -m pip install -r requirements.txt

      - name: Install mer
        run: |
          python -m pip install .

      - name: Test with pytest
        run: |
          pytest
